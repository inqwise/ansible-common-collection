---  
- name: Restart Consul
  ansible.builtin.service:
    name: consul
    state: restarted
    enabled: true
  register: consul_restart
  ignore_errors: "{{ not consul_server }}"

- name: Check Consul service status
  ansible.builtin.shell: "journalctl -u consul -n 20 --no-pager"
  register: consul_status_log
  when: consul_restart is failed and not consul_server

- name: Determine failure reason
  block:
    - name: Check for 'Failed to join' error
      set_fact:
        join_failure: "{{ 'Failed to join' in consul_status_log.stdout }}"

    - name: Check for 'No servers available' error
      set_fact:
        join_failure: "{{ 'No servers available' in consul_status_log.stdout }}"
#      when: not join_failure

    - debug: var=join_failure

    - name: Log and fail for other errors
      fail:
        msg: |
          Consul restart failed due to an unexpected issue:
          {{ consul_status_log.stdout }}
      when: not join_failure
      
  when: consul_restart is failed and not consul_server

- name: resolv AL2
  include_tasks: resolv_al2.yml
  when: ansible_os_sub_family == "Amazon" and ansible_os_version_major == "2"

- name: resolv AL2023
  include_tasks: resolv_al2023.yml
  when: ansible_os_sub_family == "Amazon" and ansible_os_version_major == "2023"
